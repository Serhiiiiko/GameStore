version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: gamestore-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: gamestore
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - gamestore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
 
  gamestore:
    image: gamestore:latest
    build:
      context: .
      dockerfile: GameStore/Dockerfile
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    container_name: gamestore-webapp
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=gamestore;Username=postgres;Password=postgres
      - Email__Host=smtp.gmail.com
      - Email__Port=587
      - Email__Sender=levwerlop@gmail.com
      - Email__Username=levwerlop@gmail.com
      - Email__Password=xxhnbnbdqnmtitov
      - TelegramBot__Token=7515132156:AAGirNJH-cpOkikSv0DAzKZIsLLEZ6xs3rQ
      - TelegramBot__ChatIds=5192243288,641673534
      - ASPNETCORE_URLS=http://+:8080
      - Session__IdleTimeout=30
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/wwwroot/images/uploads
    restart: always
    networks:
      - gamestore-network

networks:
  gamestore-network:
    driver: bridge

volumes:
  postgres-data:
  uploads: